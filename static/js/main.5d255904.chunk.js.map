{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","Number","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","console","log","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d255904.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: Number(enteredAmount),\n      // or amount:+enteredAmount this unary opertor converts string to number\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          {/* label has been set to display:block; */}\n          <input\n            type='text'\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        {/* upon onClick the functions represented by props.onCancel will be executed */}\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n      //toString() converts numberical value to string\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className='new-expense'>\n    {/* this is short form of ternary operator in javascript */}\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {/* if isEditing is false then show the button */}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n      {/* if isEditing is true then show the ExpenseForm */}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport './ExpensesList.css';\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\n  }\n//if length of passed on filtered array is zero,then it will render found no Expenses, else it will render the list below\n  return (\n    <ul className='expenses-list'>\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n  // as a string coz it will be assigned as a css property\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    // as we have seen in expense form that + used normally works as concatenation if atleast one string is present\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);//this is an arrow function\n  const totalMaximum = Math.max(...dataPointValues);\n  //as Math.max() needs comma seperated form,just array won't work\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        // for every dataPoint a chartBar component is being rendered \n        <ChartBar\n          key={dataPoint.label}\n          //since the label will be unique for each chartbar\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\n\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n    //filter and return an array with elements that qualify the given condition\n  });\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    console.log(expense);\n    //this expense parameter is passed on from NewExpense component\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      {/* we are passing addExpenseHandler function to NewExpense component.\n      The component atributes are used only for passing */}\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}